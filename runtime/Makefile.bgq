date := $(shell date '+%Y%m%d')

FEATURE_FLAGS = -DOMP_40_ENABLED=1 -DOMP_30_ENABLED=1 -DOMP_VERSION=201107 -DKMP_VERSION_MAJOR=5 \
		-DCACHE_LINE=64 -DKMP_ADJUST_BLOCKTIME=1 -DBUILD_I8 -DKMP_USE_ADAPTIVE_LOCKS=0 \
		-DKMP_DEBUG_ADAPTIVE_LOCKS=0 -DINTEL_NO_ITTNOTIFY_API -DKMP_VERSION_MINOR=0 -DKMP_VERSION_BUILD=0 \
		-DKMP_LIBRARY_FILE=\"libiomp5.so\" -D_KMP_BUILD_TIME="\"$(date)\"" -DKMP_GOMP_COMPAT

CPPFLAGS = ${FEATURE_FLAGS} -D__float128='long double'

CC = powerpc64-bgq-linux-gcc
CXX = powerpc64-bgq-linux-g++

all: build/libiomp5.a build/libiomp5.so

build/.dir:
	mkdir -p build
	touch build/.dir

build/omp.h:
	perl tools/expand-vars.pl --strict $$(echo $(FEATURE_FLAGS) | sed 's/-D/-D /g') \
	  -D KMP_BUILD_DATE=$(date) -D Revision=Revision -D Date=Date \
	  src/include/40/omp.h.var build/omp.h

build/%.o: src/%.cpp build/kmp_i18n_id.inc build/kmp_i18n_default.inc build/omp.h
	${CXX} -c ${CPPFLAGS} -g -O3 -Isrc -Ibuild -o $@ $<

build/%.o: src/%.c build/kmp_i18n_id.inc build/kmp_i18n_default.inc build/omp.h
	${CC} -x c++ -c ${CPPFLAGS} -g -O3 -Isrc -Ibuild -o $@ $<

build/%-pic.o: src/%.cpp build/kmp_i18n_id.inc build/kmp_i18n_default.inc build/omp.h
	${CXX} -fPIC -c ${CPPFLAGS} -g -O3 -Isrc -Ibuild -o $@ $<

build/%-pic.o: src/%.c build/kmp_i18n_id.inc build/kmp_i18n_default.inc build/omp.h
	${CC} -fPIC -x c++ -c ${CPPFLAGS} -g -O3 -Isrc -Ibuild -o $@ $<

OBJS =	build/kmp_alloc.o \
	build/kmp_affinity.o \
	build/kmp_atomic.o \
	build/kmp_barrier.o \
	build/kmp_cancel.o \
	build/kmp_csupport.o \
	build/kmp_dispatch.o \
	build/kmp_debug.o \
	build/kmp_environment.o \
	build/kmp_error.o \
	build/kmp_ftn_cdecl.o \
	build/kmp_ftn_extra.o \
	build/kmp_ftn_stdcall.o \
	build/kmp_global.o \
	build/kmp_i18n.o \
	build/kmp_io.o \
	build/kmp_itt.o \
	build/kmp_runtime.o \
	build/kmp_settings.o \
	build/kmp_sched.o \
	build/kmp_stats.o \
	build/kmp_stats_timing.o \
	build/kmp_str.o \
	build/kmp_tasking.o \
	build/kmp_taskq.o \
	build/kmp_taskdeps.o \
	build/kmp_threadprivate.o \
	build/kmp_utility.o \
	build/kmp_version.o \
	build/kmp_wait_release.o \
	build/kmp_lock.o \
	build/z_Linux_util.o

OBJS_PIC = $(OBJS:.o=-pic.o)

BGSYS_FLOOR=$(shell readlink /bgsys/drivers/ppcfloor)
build/libiomp5.so: $(OBJS_PIC)
	${CXX} -Wl,--build-id -Wl,-rpath -Wl,${BGSYS_FLOOR}/gnu-linux/powerpc64-bgq-linux/lib -shared -o $@.1.0 $^ -Wl,-soname,$(shell basename $@.1) -lpthread
	(cd $(shell dirname $@) && ln -sf $(shell basename $@.1.0) $(shell basename $@.1))
	(cd $(shell dirname $@) && ln -sf $(shell basename $@.1) $(shell basename $@))
# Note: We should not need the --build-id when we switch to clang (it should add it for us).

build/libiomp5.a: $(OBJS)
	ar cr $@ $^

build/kmp_i18n_id.inc: src/i18n/en_US.txt tools/message-converter.pl build/.dir
	perl tools/message-converter.pl --prefix=kmp_i18n --enum=$@ $<

build/kmp_i18n_default.inc: src/i18n/en_US.txt tools/message-converter.pl build/.dir
	perl tools/message-converter.pl --prefix=kmp_i18n --default=$@ $<

clean:
	rm -rf build

